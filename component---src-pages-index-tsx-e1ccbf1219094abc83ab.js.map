{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","filter","post","frontmatter","show","category","map","fields","slug","key","className","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,0HAiEeA,UA1DmC,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnDC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cAEX,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACA,wBAAIK,MAAO,CAAEC,UAAW,SACrBL,EAAMM,QAAO,SAAAC,GAAI,QAAMA,EAAKC,YAAYC,MAAsC,SAA9BF,EAAKC,YAAYE,YAAqBC,KAAI,SAAAJ,GACzF,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKK,OAAOC,KAEpD,OACE,wBAAIC,IAAKP,EAAKK,OAAOC,MACnB,6BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIX,EAAKK,OAAOC,KAAMM,SAAS,OACnC,0BAAMA,SAAS,YAAYpB,KAG/B,+BAAQQ,EAAKC,YAAYY,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CL,SAAS,yBAqCtB,IAAMM,EAAY","file":"component---src-pages-index-tsx-e1ccbf1219094abc83ab.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst BlogIndex: React.FC<PageProps<DataProps>> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/* <Bio /> */}\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.filter(post => !!post.frontmatter.show && post.frontmatter.category === \"blog\").map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    nodes: Array<{\n      excerpt: any\n      fields: {\n        slug: string\n      }\n      frontmatter: {\n        date: string\n        title: string\n        description: string\n        category: string\n        show: boolean\n      }\n    }>\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n          show\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}