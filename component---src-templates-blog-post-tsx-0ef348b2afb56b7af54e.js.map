{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","id","style","tag","map","e","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,0HAuEeA,UAhE2C,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3DC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,2BAAIL,EAAKQ,YAAYO,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,yBAAKK,GAAG,OAAOC,MAAO,IAAtB,UAEGpB,EAAKQ,YAAYa,IAAIC,KAAI,SAAAC,GAAC,OAAI,uBAAGH,MAAO,CAAC,QAAW,WAAW,2BAAOA,MAAO,CAAC,WAAc,YAA7B,IAA2CG,GAA5E,SAGjC,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKZ,UAAU,iBACb,wBACES,MAAO,CACLI,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGtB,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKC,YAAYH,MADpB,WAgDP,IAAM4B,EAAY","file":"component---src-templates-blog-post-tsx-0ef348b2afb56b7af54e.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\r\nimport React from \"react\"\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\n\r\nconst BlogPostTemplate: React.FC<PageProps<DataProps>>  = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        <div id=\"tags\" style={{}}>\r\n          Tags: &nbsp;\r\n          {post.frontmatter.tag.map(e => <p style={{\"display\": \"inline\"}}><label style={{\"background\": \"#cccccc\"}}>#{e}</label>&nbsp;</p>)}\r\n        </div>\r\n        \r\n        <hr />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\ntype DataProps = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  markdownRemark: {\r\n    id: string,\r\n    excerpt: any,\r\n    html: string,\r\n    frontmatter: {\r\n      title: string\r\n      date: string\r\n      description: string\r\n      tag: string[]\r\n    }\r\n  },\r\n  previous: {\r\n    fields: {\r\n      slug: string\r\n    }\r\n    frontmatter: {\r\n      title: string\r\n    }\r\n  }\r\n  next: {\r\n    fields: {\r\n      slug: string\r\n    }\r\n    frontmatter: {\r\n      title: string\r\n    }\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        tag\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}