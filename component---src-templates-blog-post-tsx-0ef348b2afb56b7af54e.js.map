{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","id","style","tag","map","e","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,0HA+EeA,UAvE2C,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC3DC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAST,gCACE,wBAAIC,SAAS,YAAYd,EAAKQ,YAAYH,OAC1C,2BAAIL,EAAKQ,YAAYO,OAEvB,6BACEC,wBAAyB,CAAEC,OAAQjB,EAAKkB,MACxCJ,SAAS,gBAEX,yBAAKK,GAAG,OAAOC,MAAO,IAAtB,UAEGpB,EAAKQ,YAAYa,IAAIC,KAAI,SAAAC,GAAC,OAAI,uBAAGH,MAAO,CAAC,QAAW,WAAW,2BAAOA,MAAO,CAAC,WAAc,YAA7B,IAA2CG,GAA5E,SAGjC,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKZ,UAAU,iBACb,wBACES,MAAO,CACLI,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGtB,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKC,YAAYH,MADpB,WAgDP,IAAM4B,EAAY","file":"component---src-templates-blog-post-tsx-0ef348b2afb56b7af54e.js","sourcesContent":["import { graphql, Link, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {Adsense} from \"@ctrl/react-adsense\";\n\n\nconst BlogPostTemplate: React.FC<PageProps<DataProps>>  = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        {/* <Adsense\n          client=\"ca-pub-1472550613966776\"\n          slot=\"7259870550\"\n          style={{ display: 'block' }}\n          layout=\"in-article\"\n          format=\"fluid\"\n        /> */}\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <div id=\"tags\" style={{}}>\n          Tags: &nbsp;\n          {post.frontmatter.tag.map(e => <p style={{\"display\": \"inline\"}}><label style={{\"background\": \"#cccccc\"}}>#{e}</label>&nbsp;</p>)}\n        </div>\n        \n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\ntype DataProps = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  markdownRemark: {\n    id: string,\n    excerpt: any,\n    html: string,\n    frontmatter: {\n      title: string\n      date: string\n      description: string\n      tag: string[]\n    }\n  },\n  previous: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n    }\n  }\n  next: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tag\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}