{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/spring-boot-aws-practice/","result":{"data":{"site":{"siteMetadata":{"title":"Jason's DevLog"}},"markdownRemark":{"id":"e9124eb3-d32e-5e7f-9941-cf3baabae0af","excerpt":"Repo : https://github.com/cooco119/spring-aws-practice 책 :  일단은 리포 Readme 내용을 그대로 긁어왔다. 추후에 정리해보자 왜 하나요? Spring Boot…","html":"<ul>\n<li>Repo : <a href=\"https://github.com/cooco119/spring-aws-practice\">https://github.com/cooco119/spring-aws-practice</a></li>\n<li>책 : <a href=\"http://m.yes24.com/Goods/Detail/83849117\"><code class=\"language-text\">스프링부트와 AWS로 혼자 구현하는 웹서비스</code></a></li>\n</ul>\n<blockquote>\n<p><em>일단은 리포 Readme 내용을 그대로 긁어왔다. 추후에 정리해보자</em></p>\n</blockquote>\n<h2>왜 하나요?</h2>\n<ul>\n<li>Spring Boot 안써봤었는데 빠르게 경험해보기 위해</li>\n<li>혼자 해보려 시도를 두세번 해봤으나, 돈을 안쓰니까 안하더라..</li>\n</ul>\n<h2>무엇을 얻고 싶나요?</h2>\n<ul>\n<li>Spring Boot 조금 더 익숙해지기</li>\n<li>Intelij에 조금 더 익숙해지기</li>\n<li>RDB에 조금 더 익숙해지기 (평소에 NoSQL만 쓰던 자..)</li>\n</ul>\n<h2>작업 목록</h2>\n<p><em>작업일 단위로 기록</em></p>\n<ul>\n<li>\n<p>21.05.16 1장~5장 </p>\n<ul>\n<li>로컬에서 기본 기능 구현</li>\n<li>Unit Tests</li>\n<li>기본 CRUD</li>\n<li>간단 프론트 w. mustache</li>\n<li>로그인 w. OAuth2</li>\n</ul>\n</li>\n<li>\n<p>21.05.19 ~ 23</p>\n<ul>\n<li>EC2 설정</li>\n<li>RDS 설정</li>\n<li>Docker 설정</li>\n<li>dev, prod 용 application.properties 분리</li>\n<li>docker repo를 이용한 배포 설정</li>\n</ul>\n</li>\n<li>\n<p>21.05.26</p>\n<ul>\n<li>무중단 배포 설정 w. Docker</li>\n</ul>\n</li>\n</ul>\n<h2>발견한 문제</h2>\n<h3>lombok configuration</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- gradle 6.1.1 버전을 사용했는데, 책에 있는 대로 하면 `Variable xx not initialized in the default constructor` 문제가 발생한다.\n  \n- gradle 5.x.x 버전 이후로는 build.gradle에 다음과 같은 설정이 추가로 필요하다\n\n&gt; compileOnly(&#39;org.projectlombok:lombok&#39;)\n&gt; annotationProcessor(&#39;org.projectlombok:lombok&#39;) // 추가 필요\n\n*(참조 : [블로그 아티클](https://deeplify.dev/back-end/spring/lombok-required-args-constructor-initialize-error#variable-not-initialized-in-the-default-constructor))*</code></pre></div>\n<h3>OpenJDK 14를 쓰니까 기존 설치되어있었던 gradle-6.1.1이 jdk14를 지원 안함</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt; java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7</code></pre></div>\n<h4>Troubleshooting</h4>\n<ul>\n<li>\n<p>그래서 gradle을 6.3으로 업그레이드 하니까 deprecated feature가 있다고 함</p>\n<blockquote>\n<p>Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0.</p>\n</blockquote>\n</li>\n<li>compile api가 deprecate됨 -> implementation으로 변경 (<a href=\"https://bluayer.com/13\">참조</a>)</li>\n<li>\n<p>그래도 테스트가 깨짐. 로그를 제대로 보니 JUNIT이 뭔가 init을 못하고 있음</p>\n<blockquote>\n<p>Caused by: org.springframework.core.NestedIOException at SimpleMetadataReader.java:57\nCaused by: java.lang.IllegalArgumentException at ClassReader.java:18</p>\n</blockquote>\n</li>\n<li>Spring 버전, jdk 버전, gradle 버전의 상호 관계상 문제가 생길 수 있다는 말을 보고, spring을 기존 2.1.7 -> 2.2.13으로 업그레이드</li>\n<li>\n<p>이제 테스트는 도는데, posts 테이블이 없다는 에러가 나면서 모든 테스트 실패..</p>\n<blockquote>\n<p>Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Table “POSTS” not found; SQL statement:\ninsert into posts (created<em>date, modified</em>date, author, content, title) values (?, ?, ?, ?, ?) [42102-200]</p>\n</blockquote>\n</li>\n<li>\n<p>hibernate가 table을 못바꾸는것 같음</p>\n<blockquote>\n<p>Hibernate: create table posts (id bigint not null auto<em>increment, created</em>date datetime, modified<em>date datetime, author varchar(255), content TEXT not null, title varchar(500) not null, primary key (id)) engine=MyISAM\n2021-05-21 17:41:24.725  WARN 38527 --- [    Test worker] o.h.t.s.i.ExceptionHandlerLoggedImpl     : GenerationTarget encountered exception accepting command : Error executing DDL “create table posts (id bigint not null auto</em>increment, created<em>date datetime, modified</em>date datetime, author varchar(255), content TEXT not null, title varchar(500) not null, primary key (id)) engine=MyISAM” via JDBC Statement</p>\n</blockquote>\n</li>\n</ul>\n<h4>결론 - hibernate 버전이 Spring Boot 2.1 -> 2.2로 바뀌면서 dialect 관련 설정 방법이 바뀐듯.</h4>\n<ul>\n<li>test package의 application.properties에 db dialect를 h2용으로 설정하니 해결</li>\n</ul>\n<blockquote>\n<p>spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</p>\n</blockquote>\n<h3>EC2에 CodeDeploy 설치 시 문제</h3>\n<blockquote>\n<p>ruby가 없다고 함</p>\n</blockquote>\n<ul>\n<li>참고 : <a href=\"https://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/codedeploy-agent-operations-install-linux.html\">https://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/codedeploy-agent-operations-install-linux.html</a></li>\n</ul>\n<h3>nginx 관련</h3>\n<h3>책과 동일 명령어로 설치 안되는 이슈</h3>\n<blockquote>\n<p>[ec2-user]$ sudo yum install nginx</p>\n<p>Loaded plugins: extras_suggestions, langpacks, priorities, update-motd</p>\n<p>No package nginx available.</p>\n<p>Error: Nothing to do</p>\n<p>nginx is available in Amazon Linux Extra topic “nginx1”</p>\n<p>To use, run</p>\n<p>sudo amazon-linux-extras install nginx1</p>\n<p>Learn more at\n<a href=\"https://aws.amazon.com/amazon-linux-2/faqs/#Amazon_Linux_Extras\">https://aws.amazon.com/amazon-linux-2/faqs/#Amazon_Linux_Extras</a></p>\n</blockquote>\n<ul>\n<li>\n<p>다음 명령어 사용</p>\n<blockquote>\n<p>sudo amazon-linux-extras install nginx1</p>\n</blockquote>\n</li>\n</ul>\n<h3>service nginx start 하면 <code class=\"language-text\">Starting nginx: [ OK ]</code> 노출 안됨</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">sudo systemctl status nginx.service</code>로 확인 필요</p>\n<blockquote>\n<p>Active: active (running) 항목이 있으면 성공</p>\n</blockquote>\n</li>\n</ul>\n<h2>더 한 것</h2>\n<h3>Docker로 배포하기</h3>\n<ul>\n<li>\n<p>dev와 prod 간의 application.properties를 다르게 가져가야 한다.</p>\n<ul>\n<li>참고 : <a href=\"https://velog.io/@harry-jang/SpringBoot-Gradle%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-profile%EB%B3%84-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\">https://velog.io/@harry-jang/SpringBoot-Gradle%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-profile%EB%B3%84-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0</a></li>\n</ul>\n</li>\n<li>\n<p>application-oauth.properties 파일 container 외부에서 주입하기</p>\n<ul>\n<li>volume으로 config 파일 mount하고 env var로 해당 경로 지정 </li>\n<li>dockerfile 참고</li>\n</ul>\n</li>\n<li>\n<p>aws s3 대신 aws ecr에 이미지 푸시</p>\n<ul>\n<li>docker build 와 aws ecr push용 .travis.yml 파일은 다음을 참고했다 (<a href=\"https://gist.github.com/BretFisher/14cd228f0d7e40dae085\">https://gist.github.com/BretFisher/14cd228f0d7e40dae085</a>)</li>\n<li>\n<p>ECR은 IAM Policy에서 GetAuthrizationToken만 설정해주고, ECR 액션 관련 설정은 ECR에서 직접 해줘야 한다.</p>\n<blockquote>\n<p><a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/set-repository-policy.html\">https://docs.aws.amazon.com/AmazonECR/latest/userguide/set-repository-policy.html</a></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>무중단 배포 스크립트 작성 관련 추가 작업</p>\n<ul>\n<li>컨테이너 이름에다가 prod1 prod2를 넣고</li>\n<li>stop.sh에서 해당 이름으로 컨테이너 스탑 및 삭제</li>\n<li>start.sh에서는 해당 이름 및 포트로 컨테이너 시작해주도록 변경</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[실습] 스프링 부트와 aws로 혼자 구현하는 웹서비스 무작정 따라하기 (완)","date":"May 28, 2021","description":"스프링부트와 AWS로 혼자 구현하는 웹서비스 책을 빠르게 따라해보면서 spring boot에 익숙해지기 프로젝트","tag":["study","springboot","handson"],"show":true}},"previous":{"fields":{"slug":"/all-weather-study-1/"},"frontmatter":{"title":"[WIP] 올웨더 포트폴리오 사전 공부 문답"}},"next":{"fields":{"slug":"/"},"frontmatter":{"title":""}}},"pageContext":{"id":"e9124eb3-d32e-5e7f-9941-cf3baabae0af","previousPostId":"5d9416c1-2446-5e7e-9a60-acd15cf9f27e","nextPostId":"762b0721-6ae5-5fcc-a300-30cd37bc04ac"}},"staticQueryHashes":["2841359383","916993862"]}